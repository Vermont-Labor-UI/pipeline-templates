parameters:
  Name : 'NugetPackage'
  Project: '' # The full path to the csproj (including the *.cspoj name)
  FeedName: '' # DEPRECATED
  Feed: '' # The Feed name to publish to
  majorVersion: 0
  stateCode: 0

jobs:
  - job: ${{ parameters.Name }}
    pool:
      vmImage: 'Ubuntu-16.04'
    variables:
      version: 0.0.0.0
    steps:
      - powershell: |
          Write-Host "##vso[task.setvariable variable=version;]${{ parameters.stateCode }}.${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          Write-Host "Setting csproj Version To $(version)"
        displayName: Calculating Version
      - script: |
          find application/ -type f -iname '*.csproj' -exec  sed -i "s/0\.0\.0\-INTERNAL/$(version)/g" "{}" \;
          grep "<VersionPrefix>.*</VersionPrefix>" -R .
        displayName: Set Project Version
      - script: |
          echo building ${{ parameters.Project }}
          dotnet build ${{ parameters.Project }} -c Release
        displayName: Building Project
      - script : dotnet pack ${{ parameters.Project}} -c Release --include-symbols --include-source -o $(Build.ArtifactStagingDirectory)/dist
        displayName: Nuget Pack
      - task: NuGetCommand@2
        displayName: 'NuGet push'
        condition:
          and
          (
            succeeded(),
            or
            (
              eq(variables['Build.SourceBranch'], 'refs/heads/master'),
              and
              (
                eq(variables['UsingDevelopBranch'], 'true'),
                eq(variables['Build.SourceBranch'], 'refs/heads/devlop')
              )
            )
          )
        inputs:
          command: push
          publishVstsFeed: '${{ parameters.FeedName}}${{ parameters.Feed}}'
          allowPackageConflicts: false
