parameters:
  containerServiceEndpoint: 'iUSDevContainer'
  registry: 'iusdev.azurecr.io'
  project: ''
  helmChartLocation: 'application/helm'
  helmChartName: ''
  majorVersion: 0
  stateCode: 0

jobs:
  - job: DockerBuilds
    pool:
      vmImage: 'Ubuntu-16.04'
    variables:
      version: ${{ parameters.stateCode }}.${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)
      semVersion: ${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)
    steps:
      - powershell: |
          Write-Host "Version = $(version)"
        displayName: Set Version Variable
      - script: |
          echo "Setting csproj Version To $version"
          find src/ -type f -iname '*.csproj' -exec  sed -i "s/0\.0\.0\-INTERNAL/$version/g" "{}" \;
          grep "<VersionPrefix>.*</VersionPrefix>" -R .
        displayName: Set Project Version
      - template: docker-pipeline.yaml
        parameters:
          version: '$(version)'
          semVersion: '$(semVersion)'
          containerServiceEndpoint: '${{ parameters.containerServiceEndpoint }}'
          registry: '${{ parameters.registry }}'
          project: '${{ parameters.project }}'
          helmChartLocation: '${{ parameters.helmChartLocation }}'
          helmChartName : '${{ parameters.helmChartName }}'
          latestName: '$(registry)/$(project):latest'
          imageName: '$(registry)/$(project):$(version)'
