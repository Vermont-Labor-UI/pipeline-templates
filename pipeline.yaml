variables:
  version: 0.0.0.0
  semVersion: 0.0.0
  containerServiceEndpoint: 'iUSDevContainer'
  registry: 'iusdev.azurecr.io'
  project: ''
  helmChartLocation: 'application/helm'
  helmChartName: ''
  majorVersion: 0
  stateCode: 0
  autorestClientFeed: ''
  autorestProjectName: ''

jobs:
  - job: DockerBuilds
    pool:
      vmImage: 'Ubuntu-16.04'
    steps:
      - script: |
          echo "Pipeline.yaml Uses the following variables"
          echo "stateCode=$(stateCode)"
          echo "majorVersion=$(majorVersion)"
          echo "build.buildId=$(build.buildId)"
          echo "registry=$(registry)"
          echo "containerServiceEndpint=$(containerServiceEndpint)"
          echo "project=$(project)"
          echo "autorestClientFeed=$(autorestClientFeed)"
          echo "autorestProjectName=$(autorestProjectName)"
          echo "helmChartLocation=$(helmChartLocation)"
          echo "helmChartName=$(helmChartName)"
      - powershell: |
          Write-Host "Attempting to set variable to $(stateCode).$(majorVersion).$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpSemversion = "$(majorVersion).$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpVersion = "$(stateCode).$tmpSemversion"

          Write-Host "Set intermeidate variables $tmpSemversion and $tmpVersion"

          Write-Host "##vso[task.setvariable variable=version;]$tmpVersion"
          Write-Host "##vso[task.setvariable variable=semVersion;]$tmpSemversion"
          Write-Host "Setting csproj Version To $(version)"
          Write-Host "Setting semVersion to $(semVersion)"
        displayName: Calculating Version
      - script: |
          find application/ -type f -iname '*.csproj' -exec  sed -i "s/0\.0\.0\-INTERNAL/$(version)/g" "{}" \;
          grep "<VersionPrefix>.*</VersionPrefix>" -R .
        displayName: Set Project Version
      - template: docker-pipeline.yaml
        parameters:
          version: '$(version)'
          semVersion: '$(semVersion)'
          containerServiceEndpoint: '$(containerServiceEndpoint)'
          registry: '$(registry'
          project: '$(project)'
          latestName: '$(registry)/$(project):latest'
          imageName: '$(registry)/$(project):$(version)'
      - template: docker-autorest-pipeline.yaml
        parameters:
          version: '$(version)'
          semVersion: '$(semVersion)'
          containerServiceEndpoint: '$(containerServiceEndpoint)'
          registry: '$(registry)'
          project: '$(project)'
          latestName: '$(registry)/$(project):latest'
          imageName: '$(registry)/$(project):$(version)'
          autorestClientFeed: '$autorestClientFeed'
          autorestProjectName: '$(autorestProjectName)'
      - template: docker-push-pipeline.yaml
        parameters:
          version: '$(version)'
          semVersion: '$(semVersion)'
          containerServiceEndpoint: '$(containerServiceEndpoint)'
          registry: '$(registry)'
          project: '$(project)'
          latestName: '$(registry)/$(project):latest'
          imageName: '$(registry)/$(project):$(version)'
      - template: helm-pipeline.yaml
        parameters:
          version: '$(version)'
          semVersion: '$(semVersion)'
          containerServiceEndpoint: '$(containerServiceEndpoint)'
          registry: '$(registry)'
          project: '$(project)'
          helmChartLocation: '$(helmChartLocation)'
          helmChartName : '$(helmChartName)'
          latestName: '$(registry)/$(project):latest'
          imageName: '$(registry)/$(project):$(version)'
