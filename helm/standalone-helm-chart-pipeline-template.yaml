parameters:
  containerServiceEndpoint: 'iUSDevContainer'
  helmChartLocation: ''
  helmChartName : ''
  registry: 'iusdev'
  additionalRegistries: ''
  additionalPublicRegistries: ''
  childChartsToUpdate: ''
steps:
  - task: AzureCLI@1
    displayName: package helm chart ${{ parameters.helmChartName }}
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        echo "Setting version to $(semVersion)"
        sed -i 's/0\.0\.0-INTERNAL/$(semVersion)/g' ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/Chart.yaml
        sed -i 's/0\.0\.0-INTERNAL/$(version)/g' ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/values.yaml
        sed -i 's/0\.0\.0-INTERNAL/$(semVersion)/g' ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/requirements.yaml
        echo "Chart.yaml"
        cat ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/Chart.yaml
        echo "values.yaml"
        cat ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/values.yaml
        echo "requirements.yaml"
        cat ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/requirements.yaml
        helm init --client-only 
        az acr helm repo add --name ${{ parameters.registry }}
        registries=("${{ parameters.additionalRegistries }}")
        for i in ${registries[@]}; 
        do 
        echo "Adding Helm Repository $i"
        az acr helm repo add --name $i; 
        done
        additionalPublicRegistries=("${{ parameters.additionalPublicRegistries }}")
        for i in "${!additionalPublicRegistries[@]}"; 
        do 
        helm repo add  $i "${additionalPublicRegistries[$i]}"; 
        done
        helm repo remove local 
        childCharts=("${{ parameters.childChartsToUpdate }}")
        for i in ${childCharts[@]}; 
        do 
        echo "updating $i"
        helm dependency update  $i &
        done
        for i in ${childCharts[@]}; 
        do 
        fg
        done
         for i in ${childCharts[@]}; 
        do 
        ls -la $i/charts
        done
        helm dependency update   ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}
        helm package ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }} --save=false
  - task: AzureCLI@1
    displayName: publish helm chart ${{ parameters.helmChartName }}
    condition: |
      and
      (
        succeeded(),
        or
        (
          eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          and
          (
            eq(variables['UsingDevelopBranch'], 'true'),
            eq(variables['Build.SourceBranch'], 'refs/heads/develop')
          )
        )
      )
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        az acr helm push -n ${{ parameters.registry }} ${{ parameters.helmChartName }}-$(semVersion).tgz
  - task: PublishBuildArtifacts@1
    displayName: Publish Helm Chart ${{ parameters.helmChartName }} as a build artifact
    inputs:
      pathtoPublish : '${{ parameters.helmChartName }}-$(semVersion).tgz'
      artifactName: helmChart