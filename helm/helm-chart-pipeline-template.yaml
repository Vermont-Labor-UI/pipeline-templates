parameters:
  project: ''
  containerServiceEndpoint: 'iUSDevContainer'
  helmChartLocation: ''
  helmChartName : ''
  version: 0
  semVersion: 0

steps:
  - task: AzureCLI@1
    displayName: Create Helm Chart
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        mkdir $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}
        docker run --net=host --mount type=bind,src=$(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }},dst=/data/output iusdev.azurecr.io/buildtools:latest cp -r /data/helm-template /data/output
        ls -lah $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}
        sudo npm install -g mustache
        echo '{ "imageName" : "${{ parameters.project }}" }' | mustache - $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        echo $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml"
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        echo '{ "helmName" : "${{ parameters.helmChartName }}" }' | mustache - $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        echo $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml"
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
  - task: AzureCLI@1
    displayName: package helm chart
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        echo "Setting version to ${{ parameters.semVersion }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml"
        sed -i 's/0\.0\.0-INTERNAL/${{ parameters.semVersion }}/g' $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        # The values contains the version of the docker image, which is the full version
        echo "Setting version to ${{ parameters.semVersion }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml"
        sed -i 's/0\.0\.0-INTERNAL/${{ parameters.version }}/g' $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        helm init --client-only
        echo "Adding iusdev acr repo"
        az acr helm repo add --name iusdev
        echo "Updating the helm dependencies in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}"
        helm dep up $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}
        echo "Packaging $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}"
        helm package $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }} --save=false
  - task: AzureCLI@1
    displayName: publish helm chart
    condition: |
      and
      (
        succeeded(),
        or
        (
          eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          and
          (
            eq(variables['UsingDevelopBranch'], 'true'),
            eq(variables['Build.SourceBranch'], 'refs/heads/develop')
          )
        )
      )
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        az acr helm push -n iusdev ${{ parameters.helmChartName }}-${{ parameters.semVersion }}.tgz
  - task: PublishBuildArtifacts@1
    displayName: publish helm chart as build artifact
    inputs:
      pathtoPublish : '${{ parameters.helmChartName }}-$(semVersion).tgz'
      artifactName: helmChart
