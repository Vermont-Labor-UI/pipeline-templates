parameters:
  project: ''
  containerServiceEndpoint: 'iUSDevContainer'
  helmChartLocation: ''
  helmChartName : ''
  version: 0
  semVersion: 0

steps:
  - task: AzureCLI@1
    displayName: Create Helm Chart
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        wget ftp://iusproget.westus.cloudapp.azure.com/helm-templates.tar.gz
        ls -lah
        echo "Extracting files: to $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName}}/"
        mkdir -p $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName}}/
        tar xvzf helm-templates.tar.gz -C $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName}}/
        ls -lah $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName}}/
        sudo npm install -g mustache
        echo '{ "imageName" : "${{ parameters.project }}" }' | mustache - $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/values.yaml $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/values.yaml
        cat $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/values.yaml
        echo '{ "helmName" : "${{ parameters.helmChartName }}" }' | mustache - $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/Chart.yaml $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/Chart.yaml
        cat $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/Chart.yaml
  - task: AzureCLI@1
    displayName: package helm chart
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        echo "Setting version to ${{ parameters.semVersion }}"
        sed -i 's/0\.0\.0-INTERNAL/${{ parameters.semVersion }}/g' $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/Chart.yaml
        # The values contains the version of the docker image, which is the full version
        sed -i 's/0\.0\.0-INTERNAL/${{ parameters.version }}/g' $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/values.yaml
        cat $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/Chart.yaml
        cat $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}/values.yaml
        helm init --client-only
        az acr helm repo add --name iusdev
        helm dep up $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }}
        helm package $(Build.ArtifactStagingDirectory)/${{ parameters.helmChartName }} --save=false
  - task: AzureCLI@1
    displayName: publish helm chart
    condition: |
      and
      (
        succeeded(),
        or
        (
          eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          and
          (
            eq(variables['UsingDevelopBranch'], 'true'),
            eq(variables['Build.SourceBranch'], 'refs/heads/develop')
          )
        )
      )
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        az acr helm push -n iusdev ${{ parameters.helmChartName }}-${{ parameters.semVersion }}.tgz
  - task: PublishBuildArtifacts@1
    displayName: publish helm chart as build artifact
    inputs:
      pathtoPublish : '${{ parameters.helmChartName }}-$(semVersion).tgz'
      artifactName: helmChart
