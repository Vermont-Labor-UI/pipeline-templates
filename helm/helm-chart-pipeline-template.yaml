parameters:
  project: ''
  containerServiceEndpoint: 'VDOL-UI-DEV'
  helmChartLocation: ''
  helmChartName : ''
  version: 0
  semVersion: 0
  azureContainerRegistry: 'vtiusdev'
  dockerBuildToolsACR: 'vtiusdev'
  additionalRegistries: ''

steps:
  - task: HelmInstaller@1
    inputs:
      helmVersionToInstall: 2.14.1
  - task: AzureCLI@1
    displayName: Create Helm Chart
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        mkdir -p $(Build.ArtifactStagingDirectory)/helm
        docker run --net=host -v $(Build.ArtifactStagingDirectory)/helm/:/data/output ${{ parameters.dockerBuildToolsACR }}.azurecr.io/buildtools:latest cp -r /data/helm-template/ /data/output/
        mv $(Build.ArtifactStagingDirectory)/helm/helm-template $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/
        sudo chmod -R 0777 $(Build.ArtifactStagingDirectory)/helm
        ls -lahR $(Build.ArtifactStagingDirectory)/helm
        sudo npm install -g mustache
        echo "Updating imageRepository to ${{ parameters.azureContainerRegistry }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml"
        echo "Updating imageName to ${{ parameters.project }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml"
        echo '{ "imageRepository" : "${{ parameters.azureContainerRegistry }}", "imageName" : "${{ parameters.project }}" }' | mustache - $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        echo "-------"
        echo "Updating helmName to ${{ parameters.helmChartName }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml"
        echo '{ "helmName" : "${{ parameters.helmChartName }}", "sourceUrl" : "$(Build.Repository.Uri)", "sourceSHA" : "$(Build.SourceVersion)", "repositoryID" : "$(Build.Repository.ID)", "repositoryName" : "$(Build.Repository.Name)", "teamProjectID" : "$(System.TeamProjectId)", "teamProjectName" : "$(System.TeamProject)" }' | mustache - $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        echo "-------"
  - task: AzureCLI@1
    displayName: package helm chart
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        echo "container service endpoint: ${{ parameters.containerServiceEndpoint }}"
        echo "Setting version to ${{ parameters.semVersion }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml"
        sed -i 's/0\.0\.0-INTERNAL/${{ parameters.semVersion }}/g' $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        echo -e "\n Following is Chart.yaml"
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/Chart.yaml
        # The values contains the version of the docker image, which is the full version
        echo "Setting version to ${{ parameters.semVersion }} in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml"
        sed -i 's/0\.0\.0-INTERNAL/${{ parameters.version }}/g' $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        echo -e "\n Following is values.yaml"
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/values.yaml
        echo -e "\n Following is ls"
        ls $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}
        
        echo -e "\n Following is all the files \n\n\n"
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/*.yaml
        
        echo -e "\n requirements "
        cat $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}/requirements.yaml
        echo -e "\n continuing "
        ls
        helm version
        helm init --client-only
        echo "Adding ${{ parameters.azureContainerRegistry }} acr repo, on line 49"
        az acr helm repo add --name ${{ parameters.azureContainerRegistry }}
        registries=("${{ parameters.additionalRegistries }}")
        for i in ${registries[@]}; 
        do 
        echo "Adding Helm Repository $i"
        az acr helm repo add --name $i; 
        done
        
        echo "Updating the helm dependencies in $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}"
        helm dep up $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}
        echo "Packaging $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }}"
        helm package $(Build.ArtifactStagingDirectory)/helm/${{ parameters.helmChartName }} --save=false
  - task: AzureCLI@1
    displayName: publish helm chart
    condition: |
      and
      (
        succeeded(),
        or
        (
          eq(variables['Build.SourceBranch'], 'refs/heads/master'),
          and
          (
            eq(variables['UsingDevelopBranch'], 'true'),
            eq(variables['Build.SourceBranch'], 'refs/heads/develop')
          )
        )
      )
    inputs:
      azureSubscription : ${{ parameters.containerServiceEndpoint }}
      scriptLocation: inlineScript
      inlineScript: |
        az acr helm push -n ${{ parameters.azureContainerRegistry }} ${{ parameters.helmChartName }}-${{ parameters.semVersion }}.tgz
  - task: PublishBuildArtifacts@1
    displayName: publish helm chart as build artifact
    inputs:
      pathtoPublish : '${{ parameters.helmChartName }}-$(semVersion).tgz'
      artifactName: helmChart
