parameters:
  containerServiceEndpoint: 'iUSDevContainer'
  helmChartLocation: ''
  helmChartName : ''
  Name: ''
  majorVersion: 0
  stateCode: 0
  registry: 'iusdev.azurecr.io'

jobs:
  - job: ${{ parameters.Name }}
    pool:
      vmImage: 'Ubuntu-16.04'
    variables:
      version: 0.0.0.0
      semVersion: 0.0.0 
    steps:
      - powershell: |
          Write-Host "Attempting to set variable to ${{ parameters.stateCode }}.${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpSemversion = "${{ parameters.majorVersion }}.$([math]::floor($(build.buildId)/10000)).$($(build.buildId)%10000)"
          $tmpVersion = "${{ parameters.stateCode }}.$tmpSemversion"

          Write-Host "Set intermeidate variables $tmpSemversion and $tmpVersion"

          Write-Host "##vso[task.setvariable variable=version;]$tmpVersion"
          Write-Host "##vso[task.setvariable variable=semVersion;]$tmpSemversion"
          Write-Host "Setting csproj Version To $(version)"
          Write-Host "Setting semVersion to $(semVersion)"
        displayName: Calculating Version
      - task: Docker@1
        displayName: Container registry login
        inputs:
          azureSubscriptionEndpoin t: ${{ parameters.containerServiceEndpoint }}
          azureContainerRegistry: ${{ parameters.registry }}
          command: login
      - task: AzureCLI@1
        displayName: package helm chart
        inputs:
          azureSubscription : ${{ parameters.containerServiceEndpoint }}
          scriptLocation: inlineScript
          inlineScript: |
            echo "Setting version to ${{ semVersion }}"
            sed -i 's/0\.0\.0-INTERNAL/${{ semVersion }}/g' ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/Chart.yaml
            # The values contains the version of the docker image, which is the full version
            sed -i 's/0\.0\.0-INTERNAL/${{ version }}/g' ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/values.yaml
            cat ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/Chart.yaml
            cat ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}/values.yaml
            helm dep up ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }}
            helm package ${{ parameters.helmChartLocation }}/${{ parameters.helmChartName }} --save=false
      - task: AzureCLI@1
        displayName: publish helm chart
        condition: |
          and
          (
            succeeded(),
            or
            (
              eq(variables['Build.SourceBranch'], 'refs/heads/master'),
              and
              (
                eq(variables['UsingDevelopBranch'], 'true'),
                eq(variables['Build.SourceBranch'], 'refs/heads/develop')
              )
            )
          )
        inputs:
          azureSubscription : ${{ parameters.containerServiceEndpoint }}
          scriptLocation: inlineScript
          inlineScript: |
            az acr helm push -n iusdev ${{ parameters.helmChartName }}-${{ semVersion }}.tgz
      - task: PublishBuildArtifacts@1
        inputs:
          pathtoPublish : '${{ parameters.helmChartName }}-${{ parameters.semVersion }}.tgz'
          artifactName: helmChart
